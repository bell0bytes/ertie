workflow:
   name: 'Code Quality'
stages:
  - security
  - quality

# SonarQube Scan
sonarqube:
  stage: quality
  only:
    - main
    - merge_requests
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner

# Qodana Scan
qodana:
  stage: quality
  only:
    - main
    - merge_requests
  variables:
    QODANA_TOKEN: $qodana_token
  image:
    name: jetbrains/qodana-python-community
    entrypoint: [""]
  script:
    - qodana --save-report --results-dir=$CI_PROJECT_DIR/.qodana

# Snyk Dependency Scanning
snyk:
  stage: security
  only:
    - main
    - merge_requests
  image:
    name: python:3.11
    entrypoint: [""]
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - env/

  before_script:
    - python3 -V
    - python3 -m venv env
    - source env/bin/activate
    - pip install -r requirements.txt

  script:
    - apt-get update -y
    - apt-get install nodejs npm -y
    - npm install -g snyk
    - snyk auth $SNYK_TOKEN
    - snyk config set org=bell0bytes
    - snyk monitor --project-name=$CI_PROJECT_NAME
    - snyk test