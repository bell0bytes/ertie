# SPDX-FileCopyrightText: Â© 2024 Gilles Bellot <gilles.bellot@bell0bytes.eu>
# SPDX-License-Identifier: AGPL-3.0-or-later

workflow:
   name: 'Security & Code Quality'
stages:
  - security
  - test
  - quality

# PyTest
pytest:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: never
  image:
    name: python:3.11
    entrypoint: [""]
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - env/
  artifacts:
    paths:
      - coverage.xml
    expire_in: 1 week
  before_script:
    - cp ${ERTIE_TEST_CONFIGURATION} .env
    - python3 -V
    - python3 -m venv env
    - source env/bin/activate
    - pip install -r requirements.txt
  script:
    - python3 -m pytest

# SonarQube Scan
sonarqube:
  stage: quality
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: never
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.python.coverage.reportPaths=coverage.xml

# GitGuardian Secret Scanning
gitguardian:
  stage: security
  image: gitguardian/ggshield:latest
  variables:
    GITGUARDIAN_API_KEY: $GITGUARDIAN_API_KEY
  script:
    - ggshield secret scan ci

# Snyk Dependency Scanning
snyk:
  stage: security
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - requirements.txt
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: never
  image:
    name: python:3.11
    entrypoint: [""]
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - env/

  before_script:
    - python3 -V
    - python3 -m venv env
    - source env/bin/activate
    - pip install -r requirements.txt

  script:
    - apt-get update -y
    - apt-get install nodejs npm -y
    - npm install -g snyk
    - snyk auth $SNYK_TOKEN
    - snyk config set org=bell0bytes
    - snyk monitor --project-name=$CI_PROJECT_NAME
    - snyk test